import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import Layout from "../components/Layouts/Layout";
import { FaStar, FaStarHalfAlt, FaRegStar, FaShoppingCart, FaBolt } from 'react-icons/fa';
import './ProductDetails.css'; 

const ProductDetails = () => {
  const { slug } = useParams();
  const [product, setProduct] = useState({});
  const [mainImage, setMainImage] = useState('');
  const [zoomPosition, setZoomPosition] = useState({ x: 0, y: 0 });

  useEffect(() => {
    if (slug) getProduct();
  }, [slug]);

  const getProduct = async () => {
    try {
      const response = await fetch(`http://localhost:7000/api/v1/product/get-product/${slug}`);
      const data = await response.json();
      setProduct(data?.product);
      setMainImage(`http://localhost:7000/api/v1/product/product-photo/${data?.product._id}`);
    } catch (error) {
      console.error("Error fetching product:", error);
    }
  };

  const handleImageZoom = (e) => {
    const { left, top, width, height } = e.target.getBoundingClientRect();
    const x = ((e.clientX - left) / width) * 100;
    const y = ((e.clientY - top) / height) * 100;
    setZoomPosition({ x, y });
  };

  const renderStars = (rating) => {
    const stars = [];
    for (let i = 1; i <= 5; i++) {
      if (i <= rating) {
        stars.push(<FaStar key={i} className="star" />);
      } else if (i - 0.5 <= rating) {
        stars.push(<FaStarHalfAlt key={i} className="star" />);
      } else {
        stars.push(<FaRegStar key={i} className="star" />);
      }
    }
    return stars;
  };

  return (
    <Layout>
      <div className="product-details-container">
        <div className="product-image-section">
          <div 
            className="main-image-container"
            onMouseMove={handleImageZoom}
            style={{
              backgroundImage: `url(${mainImage})`,
              backgroundPosition: `${zoomPosition.x}% ${zoomPosition.y}%`
            }}
          >
            <img src={mainImage} alt={product.name} className="main-image" />
          </div>
          <div className="thumbnail-container">
            {product?.images?.map((imgUrl, index) => (
              <img 
                key={index} 
                src={imgUrl} 
                alt={`thumbnail-${index}`} 
                className="thumbnail" 
                onClick={() => setMainImage(imgUrl)} 
              />
            )) || <img src={mainImage} alt="thumbnail" className="thumbnail" onClick={() => setMainImage(mainImage)} />}
          </div>
        </div>
        <div className="product-info-section">
          <h1 className="product-title">{product.name}</h1>
          <div className="product-rating">
            {renderStars(4.5)} {/* Assuming a rating of 4.5 */}
            <span className="rating-count">(1,234 ratings)</span>
          </div>
          <div className="product-price">
            <span className="current-price">${product.price}</span>
            <span className="original-price">${(product.price * 1.2).toFixed(2)}</span>
            <span className="discount">20% off</span>
          </div>
          <div className="product-description">
            <h3>About this item</h3>
            <p>{product.description}</p>
          </div>
          <div className="product-meta">
            <p><strong>Category:</strong> {product?.category?.name}</p>
            <p><strong>Availability:</strong> In Stock</p>
          </div>
          <div className="product-actions">
            <button className="btn-add-to-cart">
              <FaShoppingCart /> Add to Cart
            </button>
            <button className="btn-buy-now">
              <FaBolt /> Buy Now
            </button>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default ProductDetails;
